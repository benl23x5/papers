{ Generated by the NESL Compiler, Version 3.1.1, on 3/13/2013 18:16. }

FUNC MAIN1_1
CONST INT 1000000
CONST INT 12
* INT
CALL RUN_DOTPROD_5
RET

FUNC RUN_DOTPROD_5
CONST INT 100
COPY 1 1
CALL DIST_4
COPY 1 1
CPOP 1 2
CPOP 1 2
COPY 1 2
CALL RAND_6
CPOP 1 2
POP 1 0
I_TO_F
CONST INT 100
CPOP 1 3
CALL DIST_4
COPY 1 1
CPOP 1 2
CPOP 1 2
COPY 1 2
CALL RAND_6
CPOP 1 2
POP 1 0
I_TO_F
CPOP 2 2
CPOP 2 2
CONST INT 0
CONST INT 100
CONST FLOAT 0.0
CONST FLOAT 0.0
CALL BENCH_8
POP 1 1
RET

FUNC DIST_4
MAKE_SEGDES
COPY 1 0
CPOP 1 2
CPOP 1 2
CALL PRIM-DIST_6
RET

FUNC PRIM-DIST_6
CPOP 1 1
CPOP 1 1
DIST INT
RET

FUNC RAND_6
CPOP 1 1
CPOP 1 1
POP 1 0
RAND
RET

FUNC BENCH_8
COPY 1 3
COPY 1 3
>= INT
IF
POP 1 3
POP 0 0
POP 2 3
POP 2 3
CPOP 1 1
COPY 1 2
I_TO_F
CALL /_13
CPOP 1 1
CPOP 1 2
I_TO_F
CALL /_13
CONST FLOAT 1000.0
* FLOAT
ELSE
CONST INT 0
START_TIMER
POP 1 0
COPY 2 6
COPY 2 6
CALL DOTPROD_9
CONST INT 0
POP 1 0
STOP_TIMER
CPOP 2 8
CPOP 2 8
CPOP 1 9
CONST INT 1
+ INT
CPOP 1 9
CPOP 1 9
CPOP 1 8
+ FLOAT
CPOP 1 8
CPOP 1 8
+ FLOAT
CALL BENCH_8
ENDIF
RET

FUNC /_13
CPOP 1 1
CPOP 1 1
/ FLOAT
RET

FUNC DOTPROD_9
CPOP 2 2
CPOP 2 2
CALL ZIP-OVER_9
COPY 1 2
CPOP 1 3
CPOP 1 3
CPOP 1 3
CPOP 1 3
POP 1 0
* FLOAT
COPY 1 1
+_REDUCE FLOAT
POP 1 1
RET

FUNC ZIP-OVER_9
CPOP 2 2
CPOP 2 2
POP 1 1
CPOP 1 2
CPOP 1 2
CPOP 1 2
RET
